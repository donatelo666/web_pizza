<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>editar el menu</title>

    <!-- relacion con  css , links para fuentes de google "lemon", bootstrap-->
    <link rel="stylesheet" href="/css/edit.menu.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <!--fuente Lemon-->
    <link
      href="https://fonts.googleapis.com/css2?family=Lemon&family=Sigmar&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-sRIl4kxILFvY47J16cr9ZwB07vP4J8+LH7qKQnuqkuIAvNWLzeN8tE5YBujZqJLB"
      crossorigin="anonymous"
    />
    <!--color-->
    <style>
      body {
        background-color: #58c06e;
      }
    </style>
  </head>

  <body>
    <!--navbar en partials-->
    <%- include('../partials/navbarAdmin') %>

    <!--tabla-->
    <table class="table table-dark table-striped">
      <h1 class="text">Editar menú de pizzas</h1>

      <thead>
        <tr>
          <th>Nombre</th>
          <th>Ingredientes</th>
          <th>Imagen</th>
          <th>Editar</th>
        </tr>
      </thead>
      
    <table class="table table-dark table-striped">
    
  <!--itera por cada pizza y crea el formulario de editar con imagen, boton guardar-->
  <tbody>
    <% pizzas.forEach(pizza => { %>
      <tr>
        <form id="form-<%= pizza.id %>" enctype="multipart/form-data">
          <td>
            <input type="text" name="nombre" value="<%= pizza.nombre %>" required />
          </td>
          <td>
            <textarea name="ingredientes" required><%= pizza.ingredientes %></textarea>
          </td>
          <td>
            <img src="<%= pizza.imagen %>" width="80" />
            <input type="hidden" name="imagenActual" value="<%= pizza.imagen %>" />
            <input type="file" name="imagen" accept="image/*" />
          </td>
          <td>
            <input type="hidden" name="pizzaId" value="<%= pizza.id %>" />
            <button type="submit" class="btn btn-success">Guardar</button>
          </td>
        </form>
      </tr>
    <% }) %>
  </tbody>
</table>

    <!--pizza actualizada con exito-->
    <div id="notificacion" class="oculto"></div>

    <!--script para manejar formulario con notificacion , tiempo maximo-->
    <script>
      function mostrarNotificacion() {
        const mensaje = `✅ Muy bien, pizza actualizada con éxito en el menú`;
        const notificacion = document.getElementById("notificacion");

        if (!notificacion) return; // evita error si el div no existe

        notificacion.innerHTML = mensaje;
        notificacion.classList.remove("oculto");
        notificacion.classList.add("visible");

        // Ocultar después de 8 segundos
        setTimeout(() => {
          notificacion.classList.remove("visible");
          notificacion.classList.add("oculto");
        }, 8000);
      }

      //escucha el boton , previene default ,llama el backend y maneja errores 
      document.querySelectorAll("form[id^='form-']").forEach((form) => {
        form.addEventListener("submit", async (e) => {
          e.preventDefault();
          const formData = new FormData(form);

          try {
            const res = await fetch("/admin/edit_menu/actualizar", {
              method: "POST",
              body: formData,
            });

            let data;
            try {
              data = await res.json(); 
            } catch (jsonError) {
              console.warn("La respuesta no es JSON:", jsonError);
              const raw = await res.text();
              console.log("Respuesta cruda:", raw);
              alert("❌ Error inesperado del servidor");
              return;
            }

            if (res.ok) {
              mostrarNotificacion();
            } else {
              alert(data.error || "❌ Error al actualizar pizza");
            }
          } catch (err) {
            console.error("Error en la solicitud:", err);
            alert("❌ Error de red o del servidor");
          }
        });
      });
    </script>

    <!--formulario de crear pizza con titulo , ingredientes e imagen-->
    <form
      enctype="multipart/form-data"
      id="formCrearPizza"
      action="/edit_menu/crear"
    >
      <hr class="text" />

      <h2 class="text">Crear nueva pizza</h2>

      <label class="text">Nombre:</label>
      <input type="text" name="nombre" required />

      <label class="text">Ingredientes:</label>
      <textarea name="ingredientes" required></textarea>

      <label class="text">Imagen:</label>
      <input type="file" name="ruta_imagen" accept="image/*" required />

      <button type="submit" class="btn btn-primary mt-2">Crear Pizza</button>
    </form>
    <!--pizza creada en el menu -->
    <div id="notificacion2" class="oculto"></div>

    <!--script con notificacion-->
    <script>
      function mostrarNotificacion2() {
        const mensaje = `✅ Muy bien pizza creada con exito en el menu  `;
        const notificacion = document.getElementById("notificacion2");
        notificacion.innerHTML = mensaje;
        notificacion.classList.remove("oculto"); //quita el oculto 
        notificacion.classList.add("visible"); // visible
        
        

        // Ocultar después de 8 secs
                setTimeout(() => {
          notificacion.classList.remove("visible");
          notificacion.classList.add("oculto");
        }, 8000);
      }

      //escucha el boton, usa la ruta , maneja errores y llama la notificacion
      document
        .getElementById("formCrearPizza")
        .addEventListener("submit", async (e) => {
          e.preventDefault();
          const formData = new FormData(e.target);

          try {
            const res = await fetch("/admin/edit_menu/crear", {
              method: "POST",
              body: formData,
            });

            let data;
            try {
              data = await res.json(); 
            } catch (err) {
              console.warn("Respuesta no es JSON:", err);
              data = {};
            }

            if (res.ok) {
              mostrarNotificacion2();
              e.target.reset(); // limpia el formulario
            } else {
              alert(data.error || "❌ Error al crear pizza");
            }
          } catch (err) {
            console.error("Error en la solicitud:", err);
            alert("❌ Error de red o servidor");
          }
        });
    </script>

    <!--sesion cerrada -->
    <div id="notificacion3" class="oculto"></div>

    <!--script para cerrar sesion escuchando el click, notificacion, quita token y redirige-->
    <script>
      let redireccion; // ✅ variable global

      function mostrarNotificacion3() {
        const mensaje = `✅ Sesión cerrada<br>
    Serás redirigido a la página de inicio en unos segundos...<br><br>
    <button id="btnIrInicio" class="btn btn-light">Ir ahora</button>`;
        const notificacion = document.getElementById("notificacion3");
        notificacion.innerHTML = mensaje;
        notificacion.classList.remove("oculto");
        notificacion.classList.add("visible");

        document.getElementById("btnIrInicio").addEventListener("click", () => {
          clearTimeout(redireccion);
          window.location.href = "/inicio";
        });
      }

      document.getElementById("logout").addEventListener("click", () => {
        localStorage.removeItem("token");
        mostrarNotificacion3();

        redireccion = setTimeout(() => {
          window.location.href = "/inicio";
        }, 10000);
      });
    </script>

    <!--script de bootstrap-->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-FKyoEForCGlyvwx9Hj09JcYn3nv7wiPVlz7YYwJrWVcXK/BmnVDxM+D2scQbITxI"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
